apiVersion: apps/v1
kind: Deployment
metadata:
  name: dependency-track-database
  labels:
    app: dependency-track
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dependency-track
      component: database
  template:
    metadata:
      labels:
        app: dependency-track
        component: database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "dependencytrack"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: password
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - "$(POSTGRES_USER)"
            - -d
            - "$(POSTGRES_DB)"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - "$(POSTGRES_USER)"
            - -d
            - "$(POSTGRES_DB)"
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data-pvc